<!-- Stuff that needs to happen at the start of the MSBuild process should go in the .props file. -->
<Project>
  <PropertyGroup>
    <VersionPrefix>1.0.0.6</VersionPrefix>
    <PackageVersion Condition="'$(VersionSuffix)' == ''">$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition="'$(VersionSuffix)' != ''">$(VersionPrefix)-$(VersionSuffix)</PackageVersion>
    <Version>$(PackageVersion)</Version>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Authors>Peter Vrenken</Authors>
    <Copyright>Copyright ©2012-2020 Peter Vrenken</Copyright>
    <Company>EtAlii</Company>
    <Product>Ubigia</Product>
    <PackageProjectUrl>https://github.com/vrenken/EtAlii.Ubigia</PackageProjectUrl>
    <RepositoryUrl>https://github.com/vrenken/EtAlii.Ubigia</RepositoryUrl>

    <UbigiaLibraryTargetFramework>netstandard2.1</UbigiaLibraryTargetFramework>
    <UbigiaApplicationTargetFramework>net5.0</UbigiaApplicationTargetFramework>
    <UbigiaGuiApplicationTargetFramework>$(UbigiaApplicationTargetFramework)-windows</UbigiaGuiApplicationTargetFramework>
    <UbigiaTestApplicationTargetFramework>$(UbigiaApplicationTargetFramework)-windows</UbigiaTestApplicationTargetFramework>

    <DefineConstants Condition="'$(UbigiaIsRunningOnBuildAgent)' == 'true'">$(DefineConstants);UBIGIA_IS_RUNNING_ON_BUILD_AGENT</DefineConstants>

    <LangVersion>9</LangVersion>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>

    <NoWarn>CA1822</NoWarn> <!-- [CA1822] Mark members as static, however as we aim to use as few static keywords as possible this is a false alarm. -->

    <!-- We want to have comments on everything public -->
    <!--    <GenerateDocumentationFile>true</GenerateDocumentationFile>-->
    <!--    <MSBuildWarningsAsErrors>CS1591</MSBuildWarningsAsErrors>-->
    
  </PropertyGroup>
  
  <!-- Analysis, code conventions and standardization. -->
  <PropertyGroup>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningsAsErrors>true</WarningsAsErrors>
    <AnalysisLevel>5.0</AnalysisLevel>
<!--    <ItemGroup>-->
<!--      <GlobalAnalyzerConfigFiles Include=".globalconfig" />-->
<!--    </ItemGroup>-->
  </PropertyGroup>

  <ItemGroup>
<!--    <PackageReference Include="Meziantou.Analyzer" Version="1.0.612" >-->
<!--      <PrivateAssets>all</PrivateAssets>-->
<!--      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>-->
<!--    </PackageReference>-->
<!--    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.8.0">-->
<!--      <PrivateAssets>all</PrivateAssets>-->
<!--      <IncludeAssets>analyzers</IncludeAssets>-->
<!--    </PackageReference>-->
<!--    <PackageReference Include="SonarAnalyzer.CSharp" Version="8.14.0.22654">-->
<!--      <PrivateAssets>all</PrivateAssets>-->
<!--      <IncludeAssets>analyzers</IncludeAssets>-->
<!--    </PackageReference>-->
  </ItemGroup>

  <PropertyGroup>
    <IsUbigiaTestProject Condition="$(MSBuildProjectName.EndsWith('.Tests')) OR $(MSBuildProjectName.EndsWith('.Tests.Docker')) OR $(MSBuildProjectName.EndsWith('.Tests.Local'))">true</IsUbigiaTestProject>
    <IsUbigiaApplication>false</IsUbigiaApplication>
    <IsUbigiaLibrary>false</IsUbigiaLibrary>
  </PropertyGroup>
  
  <!-- The PropertyGroup below is used to configure all test projects. -->
  <PropertyGroup Condition="'$(IsUbigiaTestProject)' == 'true'">
    <TargetFramework>$(UbigiaTestApplicationTargetFramework)</TargetFramework>
    <Description>Unit test project</Description>
    <OutputType>Library</OutputType>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <!-- We don't want any of the hosting test projects to be packaged. -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('.Hostings.Tests.'))">
    <IsPackable>false</IsPackable>
  </PropertyGroup>
</Project>

