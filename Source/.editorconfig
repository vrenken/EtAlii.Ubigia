# Top level entry required to mark this as a global AnalyzerConfig file
root = true

[*.cs]
######## Indentation and spacing ########
indent_size = 4
indent_style = space
tab_width = 4
######## Style ##########################
csharp_style_expression_bodied_methods = true:silent
csharp_style_expression_bodied_properties = when_on_single_line:error
csharp_style_expression_bodied_indexers = when_on_single_line:error
csharp_style_expression_bodied_accessors = when_on_single_line:error

dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_property = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_event = false:error
dotnet_style_require_accessibility_modifiers = for_non_interface_members:error
dotnet_style_readonly_field = true:error
csharp_prefer_static_local_function = false:error # We don't want static methods.

#dotnet_diagnostic.*.severity = error
dotnet_diagnostic.CA2000.severity = error
dotnet_diagnostic.S1135.severity = error
dotnet_diagnostic.MA0004.severity = error # [MA0004] Use ConfigureAwait(false) as the current SynchronizationContext is not needed

dotnet_diagnostic.CA2007.severity = suggestion
dotnet_diagnostic.MA0049.severity = suggestion # [MA0049] Type name should not match namespace
dotnet_diagnostic.CA2000.severity = suggestion # [CA2000] Use recommended dispose pattern.
dotnet_diagnostic.CA1822.severity = suggestion # [CA1822] Mark members as static, however as we aim to use as few static keywords as possible this is a false alarm. 

dotnet_diagnostic.S1135.severity = suggestion #  [S1135] Complete the task associated to this 'TODO' comment. 

######## .NET Coding Conventions ########

# CA2000: Dispose objects before losing scope

#dotnet_code_quality.CA2000.severity = error
#dotnet_code_quality.CA2007.severity = error

csharp_style_var_for_built_in_types=true


# Disable regions
# maybe Stylecop rules?
# Correct member names
# correct curly brackets
# only one class per file.
# - SA1402 StyleCop.Analyzers

