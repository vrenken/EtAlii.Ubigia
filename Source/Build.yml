# Default Ubigia build and test pipeline. 
variables:
  buildDisplayName: 'EtAlii.Ubigia'
  sonarQubeProject: 'EtAlii.Ubigia'
  timeoutInMinutes: 120
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'

trigger:
  - master

name: ${{ variables.buildDisplayName }}

jobs:
  - job: 'buildAndTest'
    displayName: 'Build and Test'
    timeoutInMinutes: ${{ variables.timeoutInMinutes }}
    pool:
      name: 'Avalon agent pool'
      demands:
        #- SpecialSoftware # Check if SpecialSoftware capability exists
        # Check if Agent.OS == Windows_NT
        - Agent.OS -equals Windows_NT 
      #vmImage: 'ubuntu-latest'    # For Docker.
      #vmImage: 'windows-latest'   # For Windows.
    steps:
    
# BUILD
      - task: UseDotNet@2
        displayName: 'Use: dotnet SDK 3.1.403'
        inputs:
          packageType: 'sdk'
          version: '3.1.403'

      - task: NugetToolInstaller@1

      - task: SonarQubePrepare@4
        displayName: 'SonarQube: prepare'
        inputs:
          SonarQube: 'Avalon SonarQube'
          scannerMode: 'MSBuild'
          projectKey: ${{ variables.sonarQubeProject }}
          extraProperties: |
            # sonar.cs.vscoveragexml.reportsPaths=$(Build.SourcesDirectory)/Source/**/*.coveragexml
            sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/Source/**/coverage.opencover.xml
            sonar.coverage.exclusions=”Source/**/*.Tests.cs”

      - task: DotNetCoreCLI@2
        displayName: 'Run: dotnet restore'
        inputs:
          command: 'restore'
          projects: |
            Source/**/*.csproj
            !Source/**/ProjectToExclude.csproj
          feedsToUse: config
          nugetConfigPath: Source/NuGet.config

      - task: DotNetCoreCLI@2
        displayName: 'Run: dotnet build'
        inputs:
          command: 'build'
          projects: |
            Source/**/*.sln
            !Source/**/StorageBrowser.csproj
          arguments: ' --no-restore --configuration $(BuildConfiguration) /p:UbigiaIsRunningOnBuildAgent=true -nodeReuse:false -maxCpuCount:8'

# TEST
      - task: DotNetCoreCLI@2
        displayName: 'Run: dotnet test'
        inputs:
          command: test
          # The WebApi tests won't run nicely on the build agent. No idea why.
          projects: |
            Source/**/*.Tests.csproj
            !Source/**/*.WebApi.Tests.csproj
          arguments: '/p:SolutionDir=$(Build.SourcesDirectory)/Source --no-restore --no-build --collect:"XPlat Code Coverage" -nodeReuse:false -maxCpuCount:8 -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'
        continueOnError: true

      - task: SonarQubeAnalyze@4
        displayName: 'SonarQube: analyse'


      - task: SonarQubePublish@4
        displayName: 'SonarQube: publish'
        inputs:
          pollingTimeoutSec: '300'

# PUBLISH
#      - task: NuGetAuthenticate@0
#        displayName: 'Run: nuget authenticate'
#
#      - script: dotnet nuget push --api-key AzureArtifacts --skip-duplicate --source ${{ variables.packageFeedUrl }} **/*.nupkg
#        displayName: 'Run: dotnet nuget push'

