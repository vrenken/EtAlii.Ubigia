# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

jobs:
- job: 'Build and Test'
  
  timeoutInMinutes: 240

  pool: 
    name: Default
    demands:
      #- SpecialSoftware # Check if SpecialSoftware capability exists
      - Agent.OS -equals Windows_NT # Check if Agent.OS == Windows_NT
    #vmImage: 'ubuntu-latest'    # For Docker.
    #vmImage: 'windows-latest'   # For Windows.
  
  
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Debug'
  
  steps:
  
  - task: UseDotNet@2
    displayName: 'Use: dotnet SDK 3.1.101'
    inputs:
      packageType: 'sdk'
      version: '3.1.101'
  
  - task: DotNetCoreCLI@2
    displayName: 'Calling: dotnet restore'
    inputs:
      command: 'restore'
      projects: |
        **/*.csproj
        !**/StorageBrowser.csproj
      feedsToUse: config
      nugetConfigPath: NuGet.config

  - task: SonarQubePrepare@4
    displayName: 'SonarQube: preparing'
    inputs:
      SonarQube: 'Avalon SonarQube'
      scannerMode: 'MSBuild'
      projectKey: 'EtAlii.Ubigia'
      extraProperties: |
        # Additional properties that will be passed to the scanner, 
        # Put one key=value per line, example:
        sonar.cs.vscoveragexml.reportsPaths=$(Agent.TempDirectory)/**/*.coveragexml

        #sonar.exclusions=**/EtAlii.Ubigia.Api.Functional.Querying.Tests/**;**/EtAlii.Ubigia.Api.Functional.Scripting.Tests/**
        #sonar.cs.vscoveragexml.reportsPaths=**/*.coveragexml
        #sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
        #sonar.coverage.exclusions="**Tests*.cs"
        #sonar.coverage.exclusions="*.Functional.*, *.Logical.*, *.Transport.*, *.Infrastructure.*"
        #sonar.verbose=true

  - task: DotNetCoreCLI@2
    displayName: 'Calling: dotnet build'
    inputs:
      command: 'build'
      projects: |
        **/*.sln
        !**/StorageBrowser.csproj
  
  - task: DotNetCoreCLI@2
    displayName: 'Calling: dotnet test'
    inputs:
      command: test
      projects: '**/*.Tests.csproj'
      arguments: '--collect "Code Coverage"  --no-build /property:SolutionDir=$(Build.SourcesDirectory)'
    continueOnError: true
  
  
  - task: SonarQubeAnalyze@4
    displayName: 'SonarQube: analysing'
  
  
  - task: SonarQubePublish@4
    displayName: 'SonarQube: publishing'
    inputs:
      pollingTimeoutSec: '300'    